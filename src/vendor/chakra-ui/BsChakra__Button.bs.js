// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Caml_option = require("bs-platform/lib/js/caml_option.js");
var BsChakra__Types$Ext = require("./BsChakra__Types.bs.js");

function makeProps(size, variantColor, width, height, paddingLeft, paddingRight, padding) {
  var arg = BsChakra__Types$Ext.mapToVariantColor(variantColor);
  var arg$1 = BsChakra__Types$Ext.extractProps(size, BsChakra__Types$Ext.buttonSizeToJs);
  var arg$2 = BsChakra__Types$Ext.extractProps(paddingLeft, (function (v) {
          return v;
        }));
  var arg$3 = BsChakra__Types$Ext.extractProps(paddingRight, (function (v) {
          return v;
        }));
  var arg$4 = BsChakra__Types$Ext.extractProps(padding, (function (v) {
          return v;
        }));
  var arg$5 = BsChakra__Types$Ext.extractProps(width, (function (v) {
          return v;
        }));
  var arg$6 = BsChakra__Types$Ext.extractProps(height, (function (v) {
          return v;
        }));
  return (function (param) {
      return (function (param$1, param$2, param$3, param$4, param$5, param$6, param$7, param$8, param$9) {
          return (function (param$10, param$11) {
              var param$12 = param$1;
              var param$13 = param$2;
              var param$14 = param$3;
              var param$15 = param$4;
              var param$16 = param$5;
              var param$17 = param$6;
              var param$18 = param$7;
              var param$19 = param$8;
              var param$20 = param$9;
              var param$21 = arg$2;
              var param$22 = arg$3;
              var param$23 = arg$4;
              var param$24 = arg$5;
              var param$25 = arg$6;
              var param$26 = param$10;
              var param$27 = param$11;
              var prim = param;
              var prim$1 = arg;
              var prim$2 = arg$1;
              var prim$3 = param$12;
              var prim$4 = param$13;
              var prim$5 = param$14;
              var prim$6 = param$15;
              var prim$7 = param$16;
              var prim$8 = param$17;
              var prim$9 = param$18;
              var prim$10 = param$19;
              var prim$11 = param$20;
              var prim$12 = param$21;
              var prim$13 = param$22;
              var prim$14 = param$23;
              var prim$15 = param$24;
              var prim$16 = param$25;
              var prim$17 = param$26;
              var tmp = {
                children: prim
              };
              if (prim$1 !== undefined) {
                tmp.variantColor = Caml_option.valFromOption(prim$1);
              }
              if (prim$2 !== undefined) {
                tmp.size = Caml_option.valFromOption(prim$2);
              }
              if (prim$3 !== undefined) {
                tmp.variant = (function () {
                      switch (Caml_option.valFromOption(prim$3)) {
                        case 12956715 : 
                            return "solid";
                        case 324570959 : 
                            return "ghost";
                        case -507635838 : 
                            return "outline";
                        case -944564230 : 
                            return "link";
                        
                      }
                    })();
              }
              if (prim$4 !== undefined) {
                tmp.type = (function () {
                      switch (Caml_option.valFromOption(prim$4)) {
                        case 436623384 : 
                            return "submit";
                        case -639606286 : 
                            return "button";
                        
                      }
                    })();
              }
              if (prim$5 !== undefined) {
                tmp.leftIcon = Caml_option.valFromOption(prim$5);
              }
              if (prim$6 !== undefined) {
                tmp.rightIcon = Caml_option.valFromOption(prim$6);
              }
              if (prim$7 !== undefined) {
                tmp.isLoading = Caml_option.valFromOption(prim$7);
              }
              if (prim$8 !== undefined) {
                tmp.isDisabled = Caml_option.valFromOption(prim$8);
              }
              if (prim$9 !== undefined) {
                tmp.loadingText = Caml_option.valFromOption(prim$9);
              }
              if (prim$10 !== undefined) {
                tmp.ariaLabel = Caml_option.valFromOption(prim$10);
              }
              if (prim$11 !== undefined) {
                tmp.onClick = Caml_option.valFromOption(prim$11);
              }
              if (prim$12 !== undefined) {
                tmp.paddingLeft = Caml_option.valFromOption(prim$12);
              }
              if (prim$13 !== undefined) {
                tmp.paddingRight = Caml_option.valFromOption(prim$13);
              }
              if (prim$14 !== undefined) {
                tmp.padding = Caml_option.valFromOption(prim$14);
              }
              if (prim$15 !== undefined) {
                tmp.width = Caml_option.valFromOption(prim$15);
              }
              if (prim$16 !== undefined) {
                tmp.height = Caml_option.valFromOption(prim$16);
              }
              if (prim$17 !== undefined) {
                tmp.key = Caml_option.valFromOption(prim$17);
              }
              return tmp;
            });
        });
    });
}

exports.makeProps = makeProps;
/* No side effect */

// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Caml_option = require("bs-platform/lib/js/caml_option.js");
var BsChakra__Types$Ext = require("./BsChakra__Types.bs.js");

function makeProps(align, justify, margin, marginTop, marginBottom, marginLeft, marginRight, maxWidth, maxHeight, minWidth, minHeight, width, height, wrap) {
  var arg = BsChakra__Types$Ext.extractProps(align, BsChakra__Types$Ext.flexAlignmentToJs);
  var arg$1 = BsChakra__Types$Ext.extractProps(justify, BsChakra__Types$Ext.flexAlignmentToJs);
  var arg$2 = BsChakra__Types$Ext.extractSpaceProps(margin);
  var arg$3 = BsChakra__Types$Ext.extractSpaceProps(marginTop);
  var arg$4 = BsChakra__Types$Ext.extractSpaceProps(marginBottom);
  var arg$5 = BsChakra__Types$Ext.extractSpaceProps(marginLeft);
  var arg$6 = BsChakra__Types$Ext.extractSpaceProps(marginRight);
  var arg$7 = BsChakra__Types$Ext.extractProps(maxWidth, (function (v) {
          return v;
        }));
  var arg$8 = BsChakra__Types$Ext.extractProps(maxHeight, (function (v) {
          return v;
        }));
  var arg$9 = BsChakra__Types$Ext.extractProps(minWidth, (function (v) {
          return v;
        }));
  var arg$10 = BsChakra__Types$Ext.extractProps(minHeight, (function (v) {
          return v;
        }));
  var arg$11 = BsChakra__Types$Ext.extractProps(width, (function (v) {
          return v;
        }));
  var arg$12 = BsChakra__Types$Ext.extractProps(height, (function (v) {
          return v;
        }));
  var arg$13 = BsChakra__Types$Ext.extractProps(wrap, BsChakra__Types$Ext.flexWrapToJs);
  return (function (param, param$1, param$2, param$3) {
      return (function (param$4, param$5, param$6) {
          var prim = param;
          var prim$1 = param$1;
          var prim$2 = arg;
          var prim$3 = arg$1;
          var prim$4 = param$2;
          var prim$5 = param$3;
          var prim$6 = arg$2;
          var prim$7 = arg$3;
          var prim$8 = arg$4;
          var prim$9 = arg$5;
          var prim$10 = arg$6;
          var prim$11 = arg$7;
          var prim$12 = arg$8;
          var prim$13 = arg$9;
          var prim$14 = arg$10;
          var prim$15 = arg$11;
          var prim$16 = arg$12;
          var prim$17 = arg$13;
          var prim$18 = param$4;
          var prim$19 = param$5;
          var tmp = {
            children: prim$5
          };
          if (prim !== undefined) {
            tmp.isInline = Caml_option.valFromOption(prim);
          }
          if (prim$1 !== undefined) {
            tmp.shouldWrapChildren = Caml_option.valFromOption(prim$1);
          }
          if (prim$2 !== undefined) {
            tmp.align = Caml_option.valFromOption(prim$2);
          }
          if (prim$3 !== undefined) {
            tmp.justify = Caml_option.valFromOption(prim$3);
          }
          if (prim$4 !== undefined) {
            tmp.spacing = Caml_option.valFromOption(prim$4);
          }
          if (prim$6 !== undefined) {
            tmp.margin = Caml_option.valFromOption(prim$6);
          }
          if (prim$7 !== undefined) {
            tmp.marginTop = Caml_option.valFromOption(prim$7);
          }
          if (prim$8 !== undefined) {
            tmp.marginBottom = Caml_option.valFromOption(prim$8);
          }
          if (prim$9 !== undefined) {
            tmp.marginLeft = Caml_option.valFromOption(prim$9);
          }
          if (prim$10 !== undefined) {
            tmp.marginRight = Caml_option.valFromOption(prim$10);
          }
          if (prim$11 !== undefined) {
            tmp.maxWidth = Caml_option.valFromOption(prim$11);
          }
          if (prim$12 !== undefined) {
            tmp.maxHeight = Caml_option.valFromOption(prim$12);
          }
          if (prim$13 !== undefined) {
            tmp.minWidth = Caml_option.valFromOption(prim$13);
          }
          if (prim$14 !== undefined) {
            tmp.minHeight = Caml_option.valFromOption(prim$14);
          }
          if (prim$15 !== undefined) {
            tmp.width = Caml_option.valFromOption(prim$15);
          }
          if (prim$16 !== undefined) {
            tmp.height = Caml_option.valFromOption(prim$16);
          }
          if (prim$17 !== undefined) {
            tmp.wrap = Caml_option.valFromOption(prim$17);
          }
          if (prim$18 !== undefined) {
            tmp.position = (function () {
                  switch (Caml_option.valFromOption(prim$18)) {
                    case 903134412 : 
                        return "relative";
                    case 100392110 : 
                        return "static";
                    case -1013592457 : 
                        return "absolute";
                    
                  }
                })();
          }
          if (prim$19 !== undefined) {
            tmp.key = Caml_option.valFromOption(prim$19);
          }
          return tmp;
        });
    });
}

exports.makeProps = makeProps;
/* No side effect */

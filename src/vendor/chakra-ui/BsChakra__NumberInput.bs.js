// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Caml_option = require("bs-platform/lib/js/caml_option.js");
var BsChakra__Types$Ext = require("./BsChakra__Types.bs.js");

function makeProps(focusBorderColor, margin, marginTop, marginBottom, marginLeft, marginRight, padding, paddingTop, paddingBottom, paddingLeft, paddingRight, px, py) {
  var arg = BsChakra__Types$Ext.mapToColor(focusBorderColor);
  var arg$1 = BsChakra__Types$Ext.extractProps(margin, (function (v) {
          return v;
        }));
  var arg$2 = BsChakra__Types$Ext.extractProps(marginTop, (function (v) {
          return v;
        }));
  var arg$3 = BsChakra__Types$Ext.extractProps(marginBottom, (function (v) {
          return v;
        }));
  var arg$4 = BsChakra__Types$Ext.extractProps(marginLeft, (function (v) {
          return v;
        }));
  var arg$5 = BsChakra__Types$Ext.extractProps(marginRight, (function (v) {
          return v;
        }));
  var arg$6 = BsChakra__Types$Ext.extractProps(padding, (function (v) {
          return v;
        }));
  var arg$7 = BsChakra__Types$Ext.extractProps(paddingTop, (function (v) {
          return v;
        }));
  var arg$8 = BsChakra__Types$Ext.extractProps(paddingBottom, (function (v) {
          return v;
        }));
  var arg$9 = BsChakra__Types$Ext.extractProps(paddingLeft, (function (v) {
          return v;
        }));
  var arg$10 = BsChakra__Types$Ext.extractProps(paddingRight, (function (v) {
          return v;
        }));
  var arg$11 = BsChakra__Types$Ext.extractProps(px, (function (v) {
          return v;
        }));
  var arg$12 = BsChakra__Types$Ext.extractProps(py, (function (v) {
          return v;
        }));
  return (function (param, param$1, param$2, param$3, param$4, param$5, param$6, param$7, param$8, param$9, param$10, param$11, param$12) {
      return (function (param$13, param$14, param$15, param$16, param$17, param$18) {
          var prim = param;
          var prim$1 = param$1;
          var prim$2 = param$2;
          var prim$3 = param$3;
          var prim$4 = param$4;
          var prim$5 = param$5;
          var prim$6 = param$6;
          var prim$7 = param$7;
          var prim$8 = param$8;
          var prim$9 = param$9;
          var prim$10 = param$10;
          var prim$11 = param$11;
          var prim$12 = param$12;
          var prim$13 = arg;
          var prim$14 = arg$1;
          var prim$15 = arg$2;
          var prim$16 = arg$3;
          var prim$17 = arg$4;
          var prim$18 = arg$5;
          var prim$19 = arg$6;
          var prim$20 = arg$7;
          var prim$21 = arg$8;
          var prim$22 = arg$9;
          var prim$23 = arg$10;
          var prim$24 = arg$11;
          var prim$25 = arg$12;
          var prim$26 = param$13;
          var prim$27 = param$14;
          var prim$28 = param$15;
          var prim$29 = param$16;
          var prim$30 = param$17;
          var tmp = { };
          if (prim !== undefined) {
            tmp.placeholder = Caml_option.valFromOption(prim);
          }
          if (prim$1 !== undefined) {
            tmp.id = Caml_option.valFromOption(prim$1);
          }
          if (prim$2 !== undefined) {
            tmp.roundedLeft = Caml_option.valFromOption(prim$2);
          }
          if (prim$3 !== undefined) {
            tmp.onChange = Caml_option.valFromOption(prim$3);
          }
          if (prim$4 !== undefined) {
            tmp.onBlur = Caml_option.valFromOption(prim$4);
          }
          if (prim$5 !== undefined) {
            tmp.value = Caml_option.valFromOption(prim$5);
          }
          if (prim$6 !== undefined) {
            tmp.rounded = Caml_option.valFromOption(prim$6);
          }
          if (prim$7 !== undefined) {
            tmp.isRequired = Caml_option.valFromOption(prim$7);
          }
          if (prim$8 !== undefined) {
            tmp.isFullWidth = Caml_option.valFromOption(prim$8);
          }
          if (prim$9 !== undefined) {
            tmp.isReadOnly = Caml_option.valFromOption(prim$9);
          }
          if (prim$10 !== undefined) {
            tmp.isInvalid = Caml_option.valFromOption(prim$10);
          }
          if (prim$11 !== undefined) {
            tmp.isDisabled = Caml_option.valFromOption(prim$11);
          }
          if (prim$12 !== undefined) {
            tmp.variant = (function () {
                  switch (Caml_option.valFromOption(prim$12)) {
                    case -507635838 : 
                        return "outline";
                    case 404362540 : 
                        return "unstyled";
                    case -364055517 : 
                        return "flushed";
                    case 86969762 : 
                        return "filled";
                    
                  }
                })();
          }
          if (prim$13 !== undefined) {
            tmp.focusBorderColor = Caml_option.valFromOption(prim$13);
          }
          if (prim$14 !== undefined) {
            tmp.margin = Caml_option.valFromOption(prim$14);
          }
          if (prim$15 !== undefined) {
            tmp.marginTop = Caml_option.valFromOption(prim$15);
          }
          if (prim$16 !== undefined) {
            tmp.marginBottom = Caml_option.valFromOption(prim$16);
          }
          if (prim$17 !== undefined) {
            tmp.marginLeft = Caml_option.valFromOption(prim$17);
          }
          if (prim$18 !== undefined) {
            tmp.marginRight = Caml_option.valFromOption(prim$18);
          }
          if (prim$19 !== undefined) {
            tmp.padding = Caml_option.valFromOption(prim$19);
          }
          if (prim$20 !== undefined) {
            tmp.paddingTop = Caml_option.valFromOption(prim$20);
          }
          if (prim$21 !== undefined) {
            tmp.paddingBottom = Caml_option.valFromOption(prim$21);
          }
          if (prim$22 !== undefined) {
            tmp.paddingLeft = Caml_option.valFromOption(prim$22);
          }
          if (prim$23 !== undefined) {
            tmp.paddingRight = Caml_option.valFromOption(prim$23);
          }
          if (prim$24 !== undefined) {
            tmp.px = Caml_option.valFromOption(prim$24);
          }
          if (prim$25 !== undefined) {
            tmp.py = Caml_option.valFromOption(prim$25);
          }
          if (prim$26 !== undefined) {
            tmp.size = (function () {
                  switch (Caml_option.valFromOption(prim$26)) {
                    case 25754 : 
                        return "sm";
                    case 24407 : 
                        return "md";
                    case 24187 : 
                        return "lg";
                    
                  }
                })();
          }
          if (prim$27 !== undefined) {
            tmp.min = Caml_option.valFromOption(prim$27);
          }
          if (prim$28 !== undefined) {
            tmp.max = Caml_option.valFromOption(prim$28);
          }
          if (prim$29 !== undefined) {
            tmp.step = Caml_option.valFromOption(prim$29);
          }
          if (prim$30 !== undefined) {
            tmp.key = Caml_option.valFromOption(prim$30);
          }
          return tmp;
        });
    });
}

exports.makeProps = makeProps;
/* No side effect */

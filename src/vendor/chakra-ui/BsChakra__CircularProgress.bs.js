// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var BsChakra__Types$Ext = require("./BsChakra__Types.bs.js");

function makeProps(color, trackColor) {
  var arg = Belt_Option.map(color, BsChakra__Types$Ext.colorToJs);
  var arg$1 = Belt_Option.map(trackColor, BsChakra__Types$Ext.colorToJs);
  return (function (param, param$1, param$2, param$3, param$4, param$5, param$6) {
      return (function (param$7, param$8) {
          var prim = param;
          var prim$1 = param$1;
          var prim$2 = param$2;
          var prim$3 = param$3;
          var prim$4 = param$4;
          var prim$5 = param$5;
          var prim$6 = param$6;
          var prim$7 = arg;
          var prim$8 = arg$1;
          var prim$9 = param$7;
          var tmp = { };
          if (prim !== undefined) {
            tmp.value = Caml_option.valFromOption(prim);
          }
          if (prim$1 !== undefined) {
            tmp.min = Caml_option.valFromOption(prim$1);
          }
          if (prim$2 !== undefined) {
            tmp.max = Caml_option.valFromOption(prim$2);
          }
          if (prim$3 !== undefined) {
            tmp.children = Caml_option.valFromOption(prim$3);
          }
          if (prim$4 !== undefined) {
            tmp.isIndeterminate = Caml_option.valFromOption(prim$4);
          }
          if (prim$5 !== undefined) {
            tmp.capIsRound = Caml_option.valFromOption(prim$5);
          }
          if (prim$6 !== undefined) {
            tmp.thickness = Caml_option.valFromOption(prim$6);
          }
          if (prim$7 !== undefined) {
            tmp.color = Caml_option.valFromOption(prim$7);
          }
          if (prim$8 !== undefined) {
            tmp.trackColor = Caml_option.valFromOption(prim$8);
          }
          if (prim$9 !== undefined) {
            tmp.key = Caml_option.valFromOption(prim$9);
          }
          return tmp;
        });
    });
}

var CircularProgressLabel = /* module */[];

exports.makeProps = makeProps;
exports.CircularProgressLabel = CircularProgressLabel;
/* No side effect */

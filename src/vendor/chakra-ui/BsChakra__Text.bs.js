// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Caml_option = require("bs-platform/lib/js/caml_option.js");
var BsChakra__Types$Ext = require("./BsChakra__Types.bs.js");

function makeProps(fontSize, lineHeight, font, letterSpacing, textAlign, color) {
  var arg = BsChakra__Types$Ext.extractProps(textAlign, BsChakra__Types$Ext.textAlignToJs);
  var arg$1 = BsChakra__Types$Ext.extractProps(font, BsChakra__Types$Ext.fontToJs);
  var arg$2 = BsChakra__Types$Ext.extractProps(letterSpacing, BsChakra__Types$Ext.letterSpacingToJs);
  var arg$3 = BsChakra__Types$Ext.extractProps(lineHeight, BsChakra__Types$Ext.lineHeightToJs);
  var arg$4 = BsChakra__Types$Ext.extractProps(fontSize, BsChakra__Types$Ext.fontSizeToJs);
  var arg$5 = BsChakra__Types$Ext.mapToColor(color);
  return (function (param) {
      return (function (param$1, param$2) {
          return (function (param$3, param$4, param$5) {
              var param$6 = param$1;
              var param$7 = param$2;
              var param$8 = arg$1;
              var param$9 = arg$2;
              var param$10 = arg$3;
              var param$11 = arg$4;
              var param$12 = arg$5;
              var param$13 = param$3;
              var param$14 = param$4;
              var param$15 = param$5;
              var prim = param;
              var prim$1 = arg;
              var prim$2 = param$6;
              var prim$3 = param$7;
              var prim$4 = param$8;
              var prim$5 = param$9;
              var prim$6 = param$10;
              var prim$7 = param$11;
              var prim$8 = param$12;
              var prim$9 = param$13;
              var prim$10 = param$14;
              var tmp = {
                children: prim
              };
              if (prim$1 !== undefined) {
                tmp.textAlign = Caml_option.valFromOption(prim$1);
              }
              if (prim$2 !== undefined) {
                tmp.as = (function () {
                      switch (Caml_option.valFromOption(prim$2)) {
                        case 112 : 
                            return "p";
                        case -866592054 : 
                            return "span";
                        
                      }
                    })();
              }
              if (prim$3 !== undefined) {
                tmp.fontWeight = (function () {
                      switch (Caml_option.valFromOption(prim$3)) {
                        case 812216871 : 
                            return "normal";
                        case -1055161979 : 
                            return "bold";
                        case -20425611 : 
                            return "medium";
                        
                      }
                    })();
              }
              if (prim$4 !== undefined) {
                tmp.font = Caml_option.valFromOption(prim$4);
              }
              if (prim$5 !== undefined) {
                tmp.letterSpacing = Caml_option.valFromOption(prim$5);
              }
              if (prim$6 !== undefined) {
                tmp.lineHeight = Caml_option.valFromOption(prim$6);
              }
              if (prim$7 !== undefined) {
                tmp.fontSize = Caml_option.valFromOption(prim$7);
              }
              if (prim$8 !== undefined) {
                tmp.color = Caml_option.valFromOption(prim$8);
              }
              if (prim$9 !== undefined) {
                tmp.isTruncated = Caml_option.valFromOption(prim$9);
              }
              if (prim$10 !== undefined) {
                tmp.key = Caml_option.valFromOption(prim$10);
              }
              return tmp;
            });
        });
    });
}

exports.makeProps = makeProps;
/* No side effect */
